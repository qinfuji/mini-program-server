<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.bczl</groupId>
    <artifactId>mini-program-server</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>
    <modules>
        <module>vertx-web</module>
        <module>tools</module>
        <module>demo</module>
    </modules>

    <properties>
        <mini.program.server.web>1.0</mini.program.server.web>
        <mini.program.tools>1.0</mini.program.tools>
        <spring.boot.version>2.1.0.RELEASE</spring.boot.version>
        <weixin.java.tools.version>3.2.0</weixin.java.tools.version>
        <vertx.version>3.5.4</vertx.version>
        <freemarker.version>2.3.28</freemarker.version>
        <apache.commons.lang3.version>3.5</apache.commons.lang3.version>
        <jackson.version>2.9.1</jackson.version>
        <log4j.version>2.7</log4j.version>

        <plugin.resources.version>3.0.1</plugin.resources.version>
        <plugin.compiler.version>3.3</plugin.compiler.version>
        <plugin.jacoco.version>0.7.9</plugin.jacoco.version>
        <plugin.surefire.version>2.20</plugin.surefire.version>
        <plugin.install.version>2.5.2</plugin.install.version>
        <plugin.deploy.version>2.8.2</plugin.deploy.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.bczl</groupId>
                <artifactId>vertx-web</artifactId>
                <version>${mini.program.server.web}</version>
            </dependency>

            <dependency>
                <groupId>com.bczl</groupId>
                <artifactId>tools</artifactId>
                <version>${mini.program.tools}</version>
            </dependency>
            <!--spring boot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>3.3.6</version>
            </dependency>

            <!--vertx-->
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-core</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-web-api-contract</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-redis-client</artifactId>
                <version>${vertx.version}</version>
            </dependency>


            <!--微信小程序-->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-miniapp</artifactId>
                <version>${weixin.java.tools.version}</version>
            </dependency>
            <!--微信支付-->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-pay</artifactId>
                <version>3.2.0</version>
            </dependency>
            <!--公众号（包括订阅号和服务号）-->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-mp</artifactId>
                <version>${weixin.java.tools.version}</version>
            </dependency>
            <!--微信开放平台-->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-open</artifactId>
                <version>${weixin.java.tools.version}</version>
            </dependency>
            <!--企业号/企业微信-->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-cp</artifactId>
                <version>${weixin.java.tools.version}</version>
            </dependency>
            <!-- freemarker -->
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.lang3.version}</version>
            </dependency>

            <!-- jackson -->
            <!-- jackson xml -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>


    <build>
    <pluginManagement>
        <plugins>
            <!-- spring boot plugin-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <finalName>
                                ${project.artifactId}-${project.version}-fat
                            </finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 由于远程仓库每次deploy必须升级版本不允许更新已有版本，并且模块的改动必须提升父版本
            ，所以必要时打开该插件可以阻止没有进行改动的模块随父模块一并deploy。防止远程仓库拒绝deploy请求。
            目前没找到更好办法解决该问题，待定... ... -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${plugin.deploy.version}</version>
                <configuration>
                    <deployAtEnd>true</deployAtEnd>
                </configuration>
            </plugin>
        </plugins>
    </pluginManagement>
        <plugins>
            <!-- resources plugin -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${plugin.resources.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- compiler plugin-->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugin.compiler.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- surefire plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${plugin.surefire.version}</version>
                <configuration>
                    <argLine>@{surefireArgLine}</argLine>
                    <skipAfterFailureCount>1</skipAfterFailureCount>
                    <parallel>methods</parallel>
                    <threadCount>10</threadCount>
                    <systemPropertyVariables>
                        <log.log4j2.home>${project.basedir}/target/logs</log.log4j2.home>
                    </systemPropertyVariables>
                    <groups>com.ifeng.fhh.zmt.unit.groups.Read</groups>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${plugin.install.version}</version>
            </plugin>

            <!-- jacoco plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${plugin.jacoco.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${jacoco.exec.file}</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${jacoco.exec.file}</dataFile>
                            <outputDirectory>${jacoco.report.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>

</project>